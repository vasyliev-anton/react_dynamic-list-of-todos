{"version":3,"sources":["enum/Filter.ts","components/Todo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoInfo","todo","onSelect","selected","id","completed","title","className","type","onClick","classNames","TodoList","todos","map","TodoFilter","setFilter","setQuery","query","onChange","e","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","onReset","useState","user","setUser","useEffect","getUser","catch","error","Error","href","email","name","App","setTodos","setUserId","selectedTodo","setSelectedTodo","filter","data","alert","filteredTodos","useMemo","filterQuery","todoQuery","toLowerCase","includes","length","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4abd03ff.chunk.js","sourcesContent":["export enum Filter {\n  ALL,\n  ACTIVE,\n  COMPLETED,\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n  onSelect: (todo: Todo) => void;\n  selected: number | undefined;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, onSelect, selected }) => {\n  const { id, completed, title } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed\n        && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={completed\n          ? 'has-text-success'\n          : 'has-text-danger'}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelect(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far', id === selected\n                ? 'fa-eye-slash'\n                : 'fa-eye',\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../Todo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect: (todo: Todo) => void;\n  selected: number | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelect, selected }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoInfo\n            todo={todo}\n            key={todo.id}\n            onSelect={onSelect}\n            selected={selected}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../enum/Filter';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setFilter: (value: Filter) => void | Todo[];\n  setQuery: (value: string) => void | Todo[];\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter, setQuery, query }) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              setFilter(+e.target.value);\n            }}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number;\n  todo: Todo;\n  onReset: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ userId, todo, onReset }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onReset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Filter } from './enum/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [userId, setUserId] = useState(0);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [filter, setFilter] = useState(Filter.ALL);\n  const [query, setQuery] = useState('');\n\n  const newModel = (newTodo: Todo) => {\n    setUserId(newTodo.userId);\n\n    return setSelectedTodo(newTodo);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(data => {\n        setTodos(data);\n      })\n      .catch(error => {\n        alert(error);\n      });\n  }, []);\n\n  const onReset = () => {\n    setUserId(0);\n    setSelectedTodo(null);\n  };\n\n  const filteredTodos = useMemo(() => {\n    if (filter === Filter.ALL) {\n      return [...todos];\n    }\n\n    if (filter === Filter.ACTIVE) {\n      return todos.filter(todo => !todo.completed);\n    }\n\n    if (filter === Filter.COMPLETED) {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return [...todos];\n  }, [filter, todos]);\n\n  const filterQuery = query\n    ? filteredTodos.filter(todoQuery => todoQuery.title.toLowerCase().includes(query.toLowerCase()))\n    : filteredTodos;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilter={setFilter} setQuery={setQuery} query={query} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? <TodoList todos={filterQuery} onSelect={newModel} selected={selectedTodo?.id} />\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { (userId && selectedTodo) && <TodoModal userId={userId} todo={selectedTodo} onReset={onReset} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}