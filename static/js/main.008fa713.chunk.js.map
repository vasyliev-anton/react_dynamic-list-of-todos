{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","toSelect","selected","className","map","todo","id","completed","title","type","onClick","classNames","TodoFilter","filter","query","useState","value","setValue","onChange","e","target","placeholder","targetValue","trim","toLowerCase","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","reset","user","setUser","useEffect","getUser","catch","error","Error","href","email","name","App","setTodos","setUserId","selectedTodo","setSelectedTodo","setFilter","setQuery","data","filterQuery","useMemo","todoToFilter","todoQuery","includes","length","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.008fa713.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  toSelect: (todo: Todo) => void;\n  selected: number | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, toSelect, selected }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => toSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', todo.id === selected\n                      ? 'fa-eye-slash'\n                      : 'fa-eye',\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filter: (value: string) => void | Todo[];\n  query: (value: string) => void | Todo[];\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter, query }) => {\n  const [value, setValue] = useState('');\n\n  const queryFilter = (targetValue: string) => {\n    query(targetValue.trim().toLowerCase());\n    setValue(targetValue);\n  };\n\n  const clearSearchButton = () => {\n    query('');\n    setValue('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              filter(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={(e) => queryFilter(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {value && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearchButton}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number;\n  todo: Todo;\n  reset: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ userId, todo, reset }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={reset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [userId, setUserId] = useState<number>(0);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const newModel = (newTodo: Todo) => {\n    setUserId(newTodo.userId);\n\n    return setSelectedTodo(newTodo);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(data => {\n        setTodos(data);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  const reset = () => {\n    setUserId(0);\n    setSelectedTodo(null);\n  };\n\n  const filteredTodosByOption = useMemo(() => {\n    return todos.filter((todoToFilter) => {\n      switch (filter) {\n        case 'all':\n          return true;\n\n        case 'active':\n          return !todoToFilter.completed;\n\n        case 'completed':\n          return todoToFilter.completed;\n\n        default:\n          return true;\n      }\n    });\n  }, [filter, todos]);\n\n  const filterQuery = filteredTodosByOption.filter(todoQuery => {\n    if (query) {\n      return todoQuery.title.toLowerCase().includes(query);\n    }\n\n    return true;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={setFilter} query={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? <TodoList todos={filterQuery} toSelect={newModel} selected={selectedTodo?.id} />\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { (userId && selectedTodo) && <TodoModal userId={userId} todo={selectedTodo} reset={reset} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}